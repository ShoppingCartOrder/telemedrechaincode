<?php

/**
 * This document defines Application_Model_DbTable_Users class
 * This is an Users model class. It defines all attributes and behaviour that is used for Users section.
 * @author Bidhan Chandra
 * @package Vivahaayojan Models
 * @subpackage Application_Model_DbTable_Users
 */
class Application_Model_DbTable_ChargeItemName extends Mylib_Model_BaseModel {

    /**
     * Defining class variable for users table name.
     */
    protected $_name = 'hms_charge_item_name';

  
    
    	public function fetchAllChargeCategory() {
        
       
            try{
            $db = $this->getAdapter();
		$query = $db->select()
					 ->from(array('cc'=>'hms_charge_category'),array('*'));
					 //->joinInner(array('ci'=>'hms_charge_item_name'),'ci.category_id = cc.id',array('ci.id AS item_id','ci.sub_category_name','ci.charge'));
                                         
               // echo $query; die;
        
                return $db->fetchAll($query);
                
            }Catch(Exception $e){
                
                echo $e->getMessage();
            }
        
    }
    
    
    
    	public function fetchAllItemCharge() {
        
       
            try{
            $db = $this->getAdapter();
		$query = $db->select()
					 ->from(array('cc'=>'hms_charge_category'),array('*'))
					 ->joinInner(array('ci'=>'hms_charge_item_name'),'ci.category_id = cc.id',array('ci.id AS item_id','ci.sub_category_name','ci.charge'));
                                         
               // echo $query; die;
        
                return $db->fetchAll($query);
                
            }Catch(Exception $e){
                
                echo $e->getMessage();
            }
        
    }
  

    public function getItemsByCatId($id) {

        if (!empty($id)) {
            
            $select = $this->getAdapter()->select()
                //->from(array('cc' => 'hms_charge_category'), array('*'))
                //->useIndex('dr.department') 
                ->from(array('ci' => 'hms_charge_item_name'), array('ci.id AS item_id','ci.sub_category_name','ci.charge'))
                    ->where('ci.category_id = ?', $id);
            
//echo $select;
            return $this->getAdapter()->fetchAll($select);
        } else {
            return Array('name' => 'NA');
        }
    }
    
    public function fetchPatientCharges($patient_id,$rId) {
        
       if (!empty($patient_id)) {
            try{
                
            $db = $this->getAdapter();
		$query = $db->select()
					 ->from(array('pc'=>'hms_patient_charges'),array('*'))
					 ->joinInner(array('ci'=>'hms_charge_item_name'),'pc.charge_item_id = ci.id',array('ci.id AS item_id','ci.sub_category_name'))
                  ->where('pc.patient_id = ?', $patient_id)                     
                  ->where('pc.registration_no = ?', $rId);                       
                //echo $query; die;
        
                return $db->fetchAll($query);
                
            }Catch(Exception $e){
                
                echo $e->getMessage();
            }
       }
        
    }
    
     public function getItemsChargeByItemId($id) {

        if (!empty($id)) {
            
            $select = $this->getAdapter()->select()
                //->from(array('cc' => 'hms_charge_category'), array('*'))
                //->useIndex('dr.department') 
                ->from(array('ci' => 'hms_charge_item_name'), array('ci.id AS item_id','ci.sub_category_name','ci.charge'))
                    ->where('ci.id = ?', $id);
            
//echo $select;
            return $this->getAdapter()->fetchRow($select);
        }
    }
    
    
    
    public function insertChargesDetails($chargessData,$total_extra_fields){
        //print_r($extra_fields_data); die;
        if($chargessData && $total_extra_fields){            
            $values = implode(',',array_fill(0,$total_extra_fields,'(?,?,?,?,?,?,?,?,?)'));             
            $sql = "INSERT INTO hms_patient_charges (`patient_id` ,`registration_no`,`bill_no`,`charge_category_id` ,`charge_item_id` ,`quantity` ,`amount`,`discount`,`net_amount`) VALUES $values";            
            
           $stmt = $this->getAdapter()->prepare($sql);  
            
            return $stmt->execute($chargessData);
            
        }else{
            return false;
        }                               
    }
    
   
    public function updateChargeDetails($chargessData,$total_extra_fields){
          // echo "YYYYYYYYYYYYY";
        //print_r($total_extra_fields); die;
        if($chargessData && $total_extra_fields){            
            $values = implode(',',array_fill(0,$total_extra_fields,'(?,?,?,?,?,?,?,?,?,?)'));             
            $sql = "INSERT INTO hms_patient_charges (`id`,`patient_id` ,`registration_no` ,`bill_no` ,`charge_category_id`,`charge_item_id` ,`quantity` ,`amount`,`discount`,`net_amount`)"
                    . " VALUES $values"." ON DUPLICATE KEY UPDATE patient_id = VALUES(patient_id),registration_no = VALUES(registration_no),bill_no = VALUES(bill_no),charge_category_id = VALUES(charge_category_id)"
                    . ",charge_item_id = VALUES(charge_item_id),quantity = VALUES(quantity),amount = VALUES(amount),discount = VALUES(discount),net_amount = VALUES(net_amount)";            
            
            
            //echo $sql; die;
            $stmt = $this->getAdapter()->prepare($sql);  
           //dd($extra_fields_data); 
           $stmt->execute($chargessData);
           
           //die;
            
        }else{
            return false;
        }                               
    }
    
    
    public function deleteChargedDetails($data){
        
          if($data){            
        
            $db = $this->getAdapter();
		$condition = array('id IN(?)' => $data);
		return $sucess = $db->delete('hms_patient_charges', $condition);
           
        }else{
            return false;
        }         
    }
    
}

?>