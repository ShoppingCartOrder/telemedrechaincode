<?php/** * This is Application_Controller_ErrorController class. This class will * execute when any exception or error occur in application. * @author Vaibhav Verma * @package Application_Controller_ErrorController * @subpackage Weddingplz_Controller_BaseController */class ErrorController extends Mylib_Controller_BaseController{    /**     * This function is used to show error message.     * Created By : Vaibhav Verma     * Date : 27 Dec,2019     * @param void     * @return void     */    public function errorAction()    {	$this->_helper->layout->setLayout('innerlayout');        //$this->_helper->layout->setLayout('layout_static');        $errors = $this->_getParam('error_handler');        $this->getResponse()->setHttpResponseCode(404);        //dd($this->getResponse()->getHttpResponseCode());        switch ($errors->type) {            case Zend_Controller_Plugin_ErrorHandler::EXCEPTION_NO_ROUTE:            case Zend_Controller_Plugin_ErrorHandler::EXCEPTION_NO_CONTROLLER:            case Zend_Controller_Plugin_ErrorHandler::EXCEPTION_NO_ACTION:                // 404 error -- controller or action not found                $this->getResponse()->setHttpResponseCode(404);                $this->view->message = 'Page not found';                //$this->_forward('notfound');                $this->initMsg('ERRORSORRY');                $this->view->keywords = $this->frmMsg['HOMEKEYWORD'];                $title = $this->frmMsg['HOMETITLE'];                $this->view->headTitle()->set($title);                $this->view->description = $this->frmMsg['HOMEDESCRIPTION'];                //$this->_forward('notfound');		//$this->render('notfound');                //$this->_redirect('error/sorry/');                break;            default:                // application error                $this->getResponse()->setHttpResponseCode(500);                //$this->getResponse()->setHttpResponseCode(404);                $this->view->message = 'Application error';                //$this->_redirect('error/sorry/');                break;        }        // Log exception, if logger available        if ($log = $this->getLog()) {            $log->crit($this->view->message, $errors->exception);        }        // conditionally display exceptions        if ($this->getInvokeArg('displayExceptions') == true) {            $this->view->exception = $errors->exception;        }        $this->view->request = $errors->request;    }    /**     * This function is used to get log of error message.     * Created By : Vaibhav Verma     * Date : 27 Dec,,2019     * @param void     * @return void     */    public function getLog()    {        $bootstrap = $this->getInvokeArg('bootstrap');        if (!$bootstrap->hasPluginResource('Log')) {            return false;        }        $log = $bootstrap->getResource('Log');        return $log;    }    /**     * This function is used to show custom error message.     * Created By : Vaibhav Verma     * Date : 27 Dec,,2019     * @param void     * @return void     */    public function sorryAction()    {        $this->getResponse()->setHttpResponseCode(404);        $this->render('notfound');        //$this->_helper->layout->setLayout('innerlayout');        $this->initMsg('ERRORSORRY');        $this->view->keywords = $this->frmMsg['HOMEKEYWORD'];        $title = $this->frmMsg['HOMETITLE'];        $this->view->headTitle()->set($title);        $this->view->description = $this->frmMsg['HOMEDESCRIPTION'];    }        /**     * This function is used to show custom error message.     * Created By : Vaibhav Verma     * Date : 27 Dec,,2019     * @param void     * @return void     */    public function notfoundAction()    {	$this->getResponse()->setHttpResponseCode(404);        $this->_helper->layout->setLayout('layout_error');        $this->initMsg('NOTFOUND');        $this->view->keywords = $this->frmMsg['HOMEKEYWORD'];        $title = $this->frmMsg['HOMETITLE'];        $this->view->headTitle()->set($title);        $this->view->description = $this->frmMsg['HOMEDESCRIPTION'];                $this->render('notfound');            }}